name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on:
    push:
        tags:
            - v*
jobs:
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build wheel
        --user
    - name: Install dependencies
      run: >-
        make install
    - name: Build a binary wheel and a source tarball
      run: >-
        make dist
    - name: Publish distribution 📦 to Test PyPI
      # if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution 📦 to PyPI
      # if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
  deploy-to-ecr:
    name: Publish a new docker image
    runs-on: ubuntu-18.04
    steps:
    - name: Version Name
      id: version_name
      run: |
        echo ::set-output NAME=VERSION_TAG::${GITHUB_REF#refs/tags/v}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_IAM_USER }}
        aws-secret-access-key: ${{ secrets.AWS_IAM_SECRET }}
        aws-region: eu-central-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: jupyter
        PYPI_VERSION: ${{ steps.version_name.outputs.VERSION_TAG }}
        IMAGE_TAG: ${{ steps.version_name.outputs.VERSION_TAG }}_0
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  --build-arg api_version=$PYPI_VERSION docker/
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
